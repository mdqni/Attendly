<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="83616197-4eab-4f5b-aa1e-bafa5b96ce53" name="Changes" comment="fix(docker): correct service Dockerfile and docker-compose">
      <change afterPath="$PROJECT_DIR$/proto/auth/v1/auth.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/cmd/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/app/app.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/app/runner.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/client/group_client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/config/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/delivery/grpc/server.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/domain/model/UserWithPassword.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/migrations/000001_init.down.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/migrations/000001_init.up.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/repository/postgres/repo.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/repository/repository.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/service/auth.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/internal/service/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/user/internal/delivery/grpc/server1.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/user/internal/service/ะด" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/shared/token/refresh.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/gen/go/user/v1/user.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/gen/go/user/v1/user.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/gen/go/user/v1/user.pb.gw.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/gen/go/user/v1/user.pb.gw.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/gen/go/user/v1/user_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/gen/go/user/v1/user_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/gen/openapiv2/group/v1/group.swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/proto/gen/openapiv2/group/v1/group.swagger.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/gen/openapiv2/user/v1/user.swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/proto/gen/openapiv2/user/v1/user.swagger.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/proto/user/v1/user.proto" beforeDir="false" afterPath="$PROJECT_DIR$/proto/user/v1/user.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/group/internal/migrations/000001_init.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/services/group/internal/migrations/000001_init.up.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/delivery/grpc/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/delivery/grpc/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/migrations/000001_init.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/migrations/000001_init.up.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/repository/postgres/repo.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/repository/postgres/repo.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/repository/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/user/internal/service/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/user/internal/service/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/errs/errors.go" beforeDir="false" afterPath="$PROJECT_DIR$/shared/errs/errors.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.24.4" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;mdqni&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/mdqni/Attendly.git&quot;,
    &quot;accountId&quot;: &quot;fb21be03-723a-4afb-ab56-61f4624f9af2&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2yPA6LEF9b2vcqd071iyihCrTjr" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.group/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.services/group/Dockerfile builder.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/mdqni/Attendly/services/gateway/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/mdqni/Attendly/services/group/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/mdqni/Attendly/services/qr/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/mdqni/Attendly/services/user/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/mdqni/Attendly/services/user/cmd/cli.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGroupService_CreateGroup_GroupAlreadyExists in github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGroupService_CreateGroup_InternalError in github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGroupService_CreateGroup_Success in github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGroupService_GetGroup_Success in github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGroupService_GroupAlreadyExists in github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_InvalidPassword in github.com/mdqni/Attendly/services/user/internal/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_InvalidPassword in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_ResourceExhausted in github.com/mdqni/Attendly/services/user/internal/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_ResourceExhausted in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_Success in github.com/mdqni/Attendly/services/user/internal/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_Success in github.com/mdqni/Attendly/services/user/internal/service/user_service_test (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_Success in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_UserNotFound in github.com/mdqni/Attendly/services/user/internal/service (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_UserNotFound in github.com/mdqni/Attendly/services/user/internal/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLogin_UserNotFound in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_EmptyFields in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_FailToSaveUser in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_GetUserByBarcodeError in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_ShortPassword in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_Success in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_UserAlreadyExists in github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test Attendly (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test Attendly.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test github.com/mdqni/Attendly/services/group/internal/service/group_service_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test github.com/mdqni/Attendly/services/user/internal/service/user_service_test.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/root/GolandProjects/Attendly/services/auth&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ],
    &quot;com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect&quot;: [
      &quot;PostgreSQL&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\root\GolandProjects\Attendly\services\auth" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\user\internal\delivery\grpc" />
      <recent name="C:\Users\root\GolandProjects\Attendly\proto\auth" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\group\internal\migrations" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\group\internal" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\root\GolandProjects\Attendly\services\auth" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\user\internal\service" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\user\internal\app" />
      <recent name="C:\Users\root\GolandProjects\Attendly\shared" />
      <recent name="C:\Users\root\GolandProjects\Attendly\services\group\internal" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
        <option value="GoTestRunConfiguration" />
      </set>
    </option>
    <option name="hiddenConfigurations">
      <map>
        <entry key="GoTestRunConfiguration">
          <value>
            <set>
              <option value="go test Attendly" />
              <option value="go test Attendly (1)" />
            </set>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="RunManager" selected="Database Script.000001_init.up.sql">
    <configuration name="000001_init.up.sql" type="DatabaseScript" editBeforeRun="true" temporary="true" nameIsGenerated="true">
      <script-file value="$PROJECT_DIR$/services/auth/internal/migrations/000001_init.up.sql" />
      <script-mode>FILE</script-mode>
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/mdqni/Attendly/services/qr/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Attendly" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/mdqni/Attendly/services/qr/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/services/qr/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/mdqni/Attendly/services/user/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Attendly" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/mdqni/Attendly/services/user/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/services/user/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go test Attendly (1)" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="Attendly" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <kind value="DIRECTORY" />
      <package value="github.com/mdqni/Attendly" />
      <directory value="$PROJECT_DIR$/services/user/internal/service" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test Attendly" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="Attendly" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <kind value="DIRECTORY" />
      <package value="github.com/mdqni/Attendly" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="services/group/Dockerfile builder" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="golang1.2_builder" />
          <option name="buildCliOptions" value="--target builder" />
          <option name="buildOnly" value="true" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="sourceFilePath" value="services/group/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Database Script.000001_init.up.sql" />
      <item itemvalue="Docker.services/group/Dockerfile builder" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Go Build.go build github.com/mdqni/Attendly/services/qr/cmd" />
      <item itemvalue="Go Build.go build github.com/mdqni/Attendly/services/user/cmd" />
      <item itemvalue="Go Test.go test Attendly" />
      <item itemvalue="Go Test.go test Attendly (1)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Database Script.000001_init.up.sql" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.services/group/Dockerfile builder" />
        <item itemvalue="Go Build.go build github.com/mdqni/Attendly/services/user/cmd" />
        <item itemvalue="Go Build.go build github.com/mdqni/Attendly/services/qr/cmd" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-57c114c3cede-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.26053.20" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-GO-243.26053.20" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="basic logic" />
    <MESSAGE value="Login, JWT generation, password hash" />
    <MESSAGE value="Redis Rate Limiter" />
    <MESSAGE value="fix redis rate limiter" />
    <MESSAGE value="mock testing using Mockery and Testify" />
    <MESSAGE value="unit test for group service&#10;before connecting group service with user service" />
    <MESSAGE value="gRPC between user and group service, auth_forward.go" />
    <MESSAGE value="migration + CI/CD with docker" />
    <MESSAGE value="feat(user): fix migrations" />
    <MESSAGE value="fix(docker): correct service Dockerfile and docker-compose" />
    <option name="LAST_COMMIT_MESSAGE" value="fix(docker): correct service Dockerfile and docker-compose" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/services/group/internal/service/service.go</url>
          <line>14</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/services/auth/internal/service/service.go</url>
          <line>9</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>