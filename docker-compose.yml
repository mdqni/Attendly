version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: attendly-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: attendly
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: attendly-redis
    restart: always
    ports:
      - "6379:6379"

  user:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:50051" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "50051:50051"
    environment:
      - CONN_STRING=postgresql://postgres:postgres@postgres:5432/attendly?sslmode=disable
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=SUPER-SECRET-CODE

  group:
    build:
      context: .
      dockerfile: services/group/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      user:
        condition: service_started
    ports:
      - "50052:50052"
    environment:
      - CONN_STRING=postgresql://postgres:postgres@postgres:5432/attendly?sslmode=disable
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=SUPER-SECRET-CODE
      - USER_SERVICE_ADDR=user:50051
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:50052" ]
      interval: 5s
      timeout: 3s
      retries: 5
  qr:
    build:
      context: .
      dockerfile: services/qr/Dockerfile
    depends_on:
      - redis
    ports:
      - "50054:50054"
    environment:
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=SUPER-SECRET-CODE
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:50054" ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
