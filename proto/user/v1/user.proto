syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";

option go_package = "github.com/mdqni/Attendly/proto/gen/go/user/v1;userv1";

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/users/{user.id}"
      body: "user"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }

  rpc IsInGroup(IsInGroupRequest) returns (IsInGroupResponse) {
    option (google.api.http) = {
      get: "/v1/users/{user_id}/groups/{group_id}/member"
    };
  }
}

message User {
  string id = 1;
  string name = 2;
  string barcode = 3;
  string role = 4;
  string email = 5;
  string avatar_url = 6;
}

message GetUserRequest {
  string id = 1;
}
message GetUserResponse {
  User user = 1;
}

message GetUsersRequest {
  int32 page = 1;
  int32 limit = 2;
}

message GetUsersResponse {
  repeated User users = 1;
}

message UpdateUserRequest {
  User user = 1;
}
message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}
message DeleteUserResponse {
  bool success = 1;
}

message IsInGroupRequest {
  string user_id = 1;
  string group_id = 2;
}
message IsInGroupResponse {
  bool is_member = 1;
}
